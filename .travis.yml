dist: bionic
language: python

sudo: false

cache:
    apt: true
    pip: true

python:
  - 3.5
  - 3.6
  - 3.7
  - 3.8
  - 3.9-dev
  - nightly
  - pypy3

env:
  - DIST=sdist
    WITH_COVERAGE=1
  - DIST=wheel
    WITH_COVERAGE=0

stages:
  - dependencies
  - test

matrix:
  fast_finish: true
  include:
    - stage: dependencies
      os: osx
      sudo: required
      language: objective-c
      env:
        - DIST=sdist
          WITH_COVERAGE=1
      cache:
        pip: false
        directories:
          - /usr/local/Cellar
          - /usr/local/Homebrew
          - $HOME/Library/Caches/Homebrew
          - $HOME/Library/Caches/pip
          - $HOME/.pyenv
      addons:
        homebrew:
          update: true
          brewfile: Brewfile
      before_install:
        - brew unlink pyenv
        - brew install --HEAD pyenv
        - eval "$(pyenv init -)"
        - /usr/bin/python pyenv_setup.py
        - python --version
        - python3 --version
        - python3.5 --version
        - python3.6 --version
        - python3.7 --version
        - python3.8 --version
        - python3.9 --version
        - python3.10 --version
        - pypy3 --version
      install:
      script:
        - true
      before_cache:
        - brew cleanup
    - stage: test
      os: osx
      sudo: required
      language: objective-c
      env:
        - DIST=sdist
          WITH_COVERAGE=1
        # don't set TOXENV; run all envs listed in tox.ini's envlist
      cache:
        pip: false
        directories:
          - /usr/local/Cellar
          - /usr/local/Homebrew
          - $HOME/Library/Caches/Homebrew
          - $HOME/Library/Caches/pip
          - $HOME/.pyenv
      install:
        - poetry install --no-root
        - source .venv/bin/activate

install:
  - pip install travis-wait-improved
  - pip install tox-travis wheel
  - python setup.py bdist_wheel

script:
  - function timeout { [ -z $TIMEOUT ] || echo "travis-wait-improved --timeout $TIMEOUT"; }
  - function installpkg { [[ $DIST == "wheel" ]] && echo "--installpkg ./dist/rinohtype-*.whl"; }
  - $(timeout) tox -v $(installpkg)

after_success:
  - "[[ $WITH_COVERAGE -eq 1 ]] && bash <(curl -s https://codecov.io/bash) -f coverage.xml -F ${TOXENV:-unittests}"

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/cccb04073ce95d678fd3
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
